<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <PackageId>Azure.Bicep.Internal.RoslynAnalyzers</PackageId>
    <!-- do not include the build output in the NuGet lib folder -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <!-- Enable our custom packaging targets -->
    <EnableNuget>true</EnableNuget>

    <NoPackageAnalysis>true</NoPackageAnalysis>
    <!-- NuGet is getting confused when generating a symbols package because of the analyzer customizations -->
    <IncludeSymbols>false</IncludeSymbols>
    <!-- analyzer projects should contain this-->
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
  </PropertyGroup>

  <ItemGroup>
    <!--
      These package versions should be the lowest version that is in use by your toolset for all development scenarios.
      When testing package upgrades, ensure that dotnet build, VS right-click build, and editor experiences all work without errors or warnings.
    -->
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.10.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <!-- ensure that the binary is included in the right directory so Roslyn can load it from the package -->
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers\dotnet\cs" Visible="false" />
  </ItemGroup>
</Project>
